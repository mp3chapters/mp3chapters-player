{"version":3,"file":"node_modules_media-captions_dist_dev_errors_js.bundle.js","mappings":";;;;;;;;;;;;;;AAAkE;;AAElE;AACA;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,uCAAuC,UAAU,wBAAwB,KAAK;AAC9E;AACA,KAAK;AACL,GAAG;AACH;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,qCAAqC,QAAQ,wBAAwB,KAAK;AAC1E;AACA,KAAK;AACL,GAAG;AACH;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,qCAAqC,QAAQ,6BAA6B,UAAU,aAAa,KAAK;AACtG;AACA,KAAK;AACL,GAAG;AACH;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,iDAAiD,KAAK,aAAa,MAAM,UAAU,MAAM;AACzF;AACA,KAAK;AACL,GAAG;AACH;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,uCAAuC,KAAK,aAAa,MAAM,UAAU,MAAM;AAC/E;AACA,KAAK;AACL,GAAG;AACH;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,oDAAoD,KAAK,aAAa,MAAM,UAAU,MAAM;AAC5F;AACA,KAAK;AACL,GAAG;AACH;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,0CAA0C,KAAK,aAAa,MAAM,UAAU,MAAM;AAClF;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,eAAe,wCAAU;AACzB,YAAY,wCAAc;AAC1B,sCAAsC,KAAK,mBAAmB,KAAK;AACnE;AACA,KAAK;AACL;AACA;;AAE6B","sources":["webpack://mp3chapters-player/./node_modules/media-captions/dist/dev/errors.js"],"sourcesContent":["import { P as ParseError, c as ParseErrorCode } from './index.js';\n\nconst ParseErrorBuilder = {\n  _badVTTHeader() {\n    return new ParseError({\n      code: ParseErrorCode.BadSignature,\n      reason: \"missing WEBVTT file header\",\n      line: 1\n    });\n  },\n  _badStartTimestamp(startTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue start timestamp \\`${startTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  _badEndTimestamp(endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  _badRangeTimestamp(startTime, endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is greater than start \\`${startTime}\\` on line ${line}`,\n      line\n    });\n  },\n  _badCueSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  _unknownCueSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  _badRegionSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  _unknownRegionSetting(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  // SSA-specific errors\n  _missingFormat(type, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadFormat,\n      reason: `format missing for \\`${type}\\` block on line ${line}`,\n      line\n    });\n  }\n};\n\nexport { ParseErrorBuilder };\n"],"names":[],"sourceRoot":""}